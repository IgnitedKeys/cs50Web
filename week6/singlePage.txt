history API -> window.onpopstate()

window(the visible part of the document):

.innerWidth
.innerHeight
.scrollY

Example from lecture:
 document.addEventListener('click',(event) => {
    const element = event.target;
    if(element.className === 'hide') {
        //element.parentElement.remove();
        element.parentElement.style.animationPlayState = 'running';
        element.parentElement.addEventListener('animationend' , ()=>{
            element.parentElement.remove();
        })
    }
 })

 .post {
    animation-name: hide;
    animation-duration: 2s;
    animation-fill-mode: forwards;
    animation-play-state: paused;
 }

 @keyframes hide {
    0% {
        opacity: 1;
        height: 100%;
        line-height: 100%;
        padding: 20px;
    }
    75% {
        opacity: 0;
        height: 100%;
        line-height: 100%;
        padding: 20px;
    }
    100% {
        opacity: 0;
        height: 0px;
        line-height: 0px;
        padding: 0px;
    }
 }


 REACT:

 declarative programming

 React - JSX
 ReactDOM
 Babel - translates React to JavaScript 